{
  "author" : "meta39",
  "version" : "1.2.7",
  "userSecure" : "",
  "currTypeMapperGroupName" : "Default",
  "currTemplateGroupName" : "MyBatis-Plus自定义权限框架",
  "currColumnConfigGroupName" : "Default",
  "currGlobalConfigGroupName" : "Default",
  "typeMapper" : {
    "Default" : {
      "name" : "Default",
      "elementList" : [ {
        "matchType" : "REGEX",
        "columnType" : "varchar(\\(\\d+\\))?",
        "javaType" : "java.lang.String"
      }, {
        "matchType" : "REGEX",
        "columnType" : "char(\\(\\d+\\))?",
        "javaType" : "java.lang.String"
      }, {
        "matchType" : "REGEX",
        "columnType" : "(tiny|medium|long)*text",
        "javaType" : "java.lang.String"
      }, {
        "matchType" : "REGEX",
        "columnType" : "decimal(\\(\\d+,\\d+\\))?",
        "javaType" : "java.lang.Double"
      }, {
        "matchType" : "ORDINARY",
        "columnType" : "bigint",
        "javaType" : "java.lang.Long"
      }, {
        "matchType" : "ORDINARY",
        "columnType" : "datetime",
        "javaType" : "java.util.Date"
      }, {
        "matchType" : "REGEX",
        "columnType" : "tinyint",
        "javaType" : "java.util.Boolean"
      }, {
        "matchType" : "ORDINARY",
        "columnType" : "int",
        "javaType" : "java.lang.Integer"
      }, {
        "matchType" : "ORDINARY",
        "columnType" : "bigint unsigned",
        "javaType" : "java.lang.Long"
      }, {
        "matchType" : "ORDINARY",
        "columnType" : "int unsigned",
        "javaType" : "java.lang.Integer"
      } ]
    }
  },
  "template" : {
    "福MyBatis-Plus" : {
      "name" : "福MyBatis-Plus",
      "elementList" : [ {
        "name" : "controller.java.vm",
        "code" : "##定义初始变量\n#set($tableName = $tool.append($tableInfo.name, \"Controller\"))\n##设置回调\n$!callback.setFileName($tool.append($tableName, \".java\"))\n$!callback.setSavePath($tool.append($tableInfo.savePath, \"/controller\"))\n##拿到主键\n#if(!$tableInfo.pkColumn.isEmpty())\n    #set($pk = $tableInfo.pkColumn.get(0))\n#end\n\n#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}controller;\n\nimport com.baomidou.mybatisplus.extension.plugins.pagination.Page;\nimport $!{tableInfo.savePackageName}.annotation.PreAuthorize;\nimport $!{tableInfo.savePackageName}.entity.$!{tableInfo.name};\nimport $!{tableInfo.savePackageName}.service.$!{tableInfo.name}Service;\n##jdk8和jdk17的Resource、Valid包不在同一个地方\nimport org.springframework.beans.factory.annotation.Autowired;\nimport javax.validation.Valid;\nimport org.springframework.web.bind.annotation.*;\n\nimport java.util.List;\n\n##表注释\n/**\n * #if(${tableInfo.comment})${tableInfo.comment}#end 控制层\n * @author $!author\n * @since $!time.currTime()\n */\n@RestController\n@RequestMapping(\"$!tool.firstLowerCase($tableInfo.name)\")\npublic class $!{tableName} {\n\n    @Autowired\n    private $!{tableInfo.name}Service $!tool.firstLowerCase($tableInfo.name)Service;\n\n    /**\n     * 根据ID查询#if(${tableInfo.comment})${tableInfo.comment}#end\n     \n\t * @param id ID\n     */\n    @PreAuthorize(\"$!{tool.firstLowerCase($tableInfo.name)}:select\")\n    @GetMapping(\"{id}\")\n    public $!{tableInfo.name} select$!{tableInfo.name}ById(@PathVariable(\"id\") $!pk.shortType id) {\n        return this.$!{tool.firstLowerCase($tableInfo.name)}Service.select$!{tableInfo.name}ById(id);\n    }\n    \n    /**\n     * 新增#if(${tableInfo.comment})${tableInfo.comment}#end\n     \n\t * @param $!{tool.firstLowerCase($tableInfo.name)} #if(${tableInfo.comment})${tableInfo.comment}#end实体类\n     */\n    @PreAuthorize(\"$!{tool.firstLowerCase($tableInfo.name)}:insert\")\n    @PostMapping\n    public Integer insert$!{tableInfo.name}(@RequestBody @Valid $!{tableInfo.name} $!{tool.firstLowerCase($tableInfo.name)}) {\n        return this.$!{tool.firstLowerCase($tableInfo.name)}Service.insert$!{tableInfo.name}($!{tool.firstLowerCase($tableInfo.name)});\n    }\n    \n    /**\n     * 更新#if(${tableInfo.comment})${tableInfo.comment}#end\n     \n\t * @param $!{tool.firstLowerCase($tableInfo.name)} #if(${tableInfo.comment})${tableInfo.comment}#end实体类\n     */\n    @PreAuthorize(\"$!{tool.firstLowerCase($tableInfo.name)}:update\")\n    @PutMapping\n    public Integer update$!{tableInfo.name}(@RequestBody @Valid $!{tableInfo.name} $!{tool.firstLowerCase($tableInfo.name)}) {\n        return this.$!{tool.firstLowerCase($tableInfo.name)}Service.update$!{tableInfo.name}($!{tool.firstLowerCase($tableInfo.name)});\n    }\n    \n\t/**\n     * 根据ID删除#if(${tableInfo.comment})${tableInfo.comment}#end\n     \n\t * @param id ID\n     */\n    @PreAuthorize(\"$!{tool.firstLowerCase($tableInfo.name)}:delete\")\n    @DeleteMapping(\"{id}\")\n    public Integer delete$!{tableInfo.name}(@PathVariable $!pk.shortType id) {\n        return this.$!{tool.firstLowerCase($tableInfo.name)}Service.delete$!{tableInfo.name}ById(id);\n    }\n    \n    /**\n     * 查询#if(${tableInfo.comment})${tableInfo.comment}#end 分页数据\n     \n     */\n    @PreAuthorize(\"$!{tool.firstLowerCase($tableInfo.name)}:select\")\n    @GetMapping(\"paging\")\n    public Page<$!{tableInfo.name}> select$!{tableInfo.name}Page(@RequestParam(required = false,defaultValue = \"1\") Long page,@RequestParam(required = false,defaultValue = \"10\") Long size) {\n        return this.$!{tool.firstLowerCase($tableInfo.name)}Service.select$!{tableInfo.name}Page(page,size);\n    }\n    \n    /**\n     * 查询#if(${tableInfo.comment})${tableInfo.comment}#end 列表\n     */\n    @PreAuthorize(\"$!{tool.firstLowerCase($tableInfo.name)}:select\")\n    @GetMapping\n    public List<$!{tableInfo.name}> select$!{tableInfo.name}List($!{tableInfo.name} $!{tool.firstLowerCase($tableInfo.name)}) {\n        return this.$!{tool.firstLowerCase($tableInfo.name)}Service.select$!{tableInfo.name}List($!{tool.firstLowerCase($tableInfo.name)});\n    }\n    \n\t/**\n     * 根据ID集合批量删除#if(${tableInfo.comment})${tableInfo.comment}#end\n     */\n    @PreAuthorize(\"$!{tool.firstLowerCase($tableInfo.name)}:delete\")\n    @DeleteMapping\n    public Integer delete$!{tableInfo.name}s(@RequestBody List<$!pk.shortType> ids){\n        return this.$!{tool.firstLowerCase($tableInfo.name)}Service.delete$!{tableInfo.name}ByIds(ids);\n    }\n}"
      }, {
        "name" : "service.java.vm",
        "code" : "##定义初始变量\n#set($tableName = $tool.append($tableInfo.name, \"Service\"))\n##设置回调\n$!callback.setFileName($tool.append($tableName, \".java\"))\n$!callback.setSavePath($tool.append($tableInfo.savePath, \"/service\"))\n\n##拿到主键\n#if(!$tableInfo.pkColumn.isEmpty())\n    #set($pk = $tableInfo.pkColumn.get(0))\n#end\n\n#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}service;\n\nimport $!{tableInfo.savePackageName}.entity.$!{tableInfo.name};\nimport com.baomidou.mybatisplus.extension.plugins.pagination.Page;\nimport com.baomidou.mybatisplus.extension.service.IService;\n##jdk8和jdk17的Resource包不在同一个地方\nimport java.util.List;\n\n/**\n * #if(${tableInfo.comment})${tableInfo.comment}#end 业务层接口\n * @author $!author\n * @since $!time.currTime()\n */\npublic interface $!{tableName} extends IService<$!{tableInfo.name}>{\n\t/**\n\t * 根据ID查询#if(${tableInfo.comment})${tableInfo.comment}\n\t #end\n\t */\n\t$!{tableInfo.name} select$!{tableInfo.name}ById($!pk.shortType id);\n\t\n\t/**\n     * 新增#if(${tableInfo.comment})${tableInfo.comment}\n     #end\n     */\n\tint insert$!{tableInfo.name}($!{tableInfo.name} $!{tool.firstLowerCase($tableInfo.name)});\n\t\n\t/**\n     * 更新#if(${tableInfo.comment})${tableInfo.comment}\n     #end\n     */\n     int update$!{tableInfo.name}($!{tableInfo.name} $!{tool.firstLowerCase($tableInfo.name)});\n     \n     /**\n     * 根据ID删除#if(${tableInfo.comment})${tableInfo.comment}\n     #end\n     */\n     int delete$!{tableInfo.name}ById($!pk.shortType id);\n     \n     /**\n     * 分页查询#if(${tableInfo.comment})${tableInfo.comment}\n     #end\n     */\n    Page<$!{tableInfo.name}> select$!{tableInfo.name}Page(Long page,Long size);\n     \n     /**\n     * 查询#if(${tableInfo.comment})${tableInfo.comment}\n     #end\n     列表\n     */\n     List<$!{tableInfo.name}> select$!{tableInfo.name}List($!{tableInfo.name} $!{tool.firstLowerCase($tableInfo.name)});\n     \n     /**\n     * 根据ID集合批量删除#if(${tableInfo.comment})${tableInfo.comment}\n     #end\n     */\n     int delete$!{tableInfo.name}ByIds(List<$!pk.shortType> ids);\n}"
      }, {
        "name" : "serviceImpl.java.vm",
        "code" : "##定义初始变量\n#set($tableName = $tool.append($tableInfo.name, \"ServiceImpl\"))\n##设置回调\n$!callback.setFileName($tool.append($tableName, \".java\"))\n$!callback.setSavePath($tool.append($tableInfo.savePath, \"/service/impl\"))\n\n##拿到主键\n#if(!$tableInfo.pkColumn.isEmpty())\n    #set($pk = $tableInfo.pkColumn.get(0))\n#end\n\n#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}service.impl;\n\nimport com.baomidou.mybatisplus.core.conditions.query.LambdaQueryWrapper;\nimport com.baomidou.mybatisplus.extension.plugins.pagination.Page;\nimport com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;\nimport $!{tableInfo.savePackageName}.entity.$!{tableInfo.name};\nimport $!{tableInfo.savePackageName}.mapper.$!{tableInfo.name}Mapper;\nimport $!{tableInfo.savePackageName}.service.$!{tableInfo.name}Service;\n##jdk8和jdk17的Resource包不在同一个地方\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\nimport java.util.List;\n\n/**\n * #if(${tableInfo.comment})${tableInfo.comment}#end 业务层接口实现\n * @author $!author\n * @since $!time.currTime()\n */\n@Service\npublic class $!{tableName} extends ServiceImpl<$!{tableInfo.name}Mapper, $!{tableInfo.name}> implements $!{tableInfo.name}Service{\n    @Autowired\n    private $!{tableInfo.name}Mapper $!tool.firstLowerCase($!{tableInfo.name})Mapper;\n\t\n\t/**\n     * 根据ID查询#if(${tableInfo.comment})${tableInfo.comment}\n     #end\n     */\n\t@Override\n    public $!{tableInfo.name} select$!{tableInfo.name}ById($!pk.shortType id) {\n        return this.$!tool.firstLowerCase($!{tableInfo.name})$!tool.append(\"Mapper.\")selectById(id);\n    }\n\t\n\t/**\n     * 新增#if(${tableInfo.comment})${tableInfo.comment}\n     #end\n     */\n    @Override\n    public int insert$!{tableInfo.name}($!{tableInfo.name} $!{tool.firstLowerCase($tableInfo.name)}){\n        return this.$!tool.firstLowerCase($!{tableInfo.name})$!tool.append(\"Mapper.\",\"insert\")($!{tool.firstLowerCase($tableInfo.name)});\n    }\n    \n    /**\n     * 更新#if(${tableInfo.comment})${tableInfo.comment}\n     #end\n     */\n    @Override\n    public int update$!{tableInfo.name}($!{tableInfo.name} $!{tool.firstLowerCase($tableInfo.name)}){\n        return this.$!tool.firstLowerCase($!{tableInfo.name})$!tool.append(\"Mapper.\",\"updateById\")($!{tool.firstLowerCase($tableInfo.name)});\n    }\n    \n    /**\n     * 根据ID删除#if(${tableInfo.comment})${tableInfo.comment}\n     #end\n     */\n     @Override\n     public int delete$!{tableInfo.name}ById($!pk.shortType id){\n        return this.$!tool.firstLowerCase($!{tableInfo.name})$!tool.append(\"Mapper.\",\"deleteById\")(id);\n     }\n     \n     /**\n     * 分页查询#if(${tableInfo.comment})${tableInfo.comment}\n     #end\n     */\n     @Override\n     public Page<$!{tableInfo.name}> select$!{tableInfo.name}Page(Long page, Long size) {\n        LambdaQueryWrapper<$!{tableInfo.name}> lqw = new LambdaQueryWrapper<>();\n        return this.$!tool.firstLowerCase($!{tableInfo.name})$!tool.append(\"Mapper.\",\"selectPage\")(Page.of(page,size),lqw);\n     }\n     \n     /**\n     * 查询#if(${tableInfo.comment})${tableInfo.comment}\n     #end\n     列表\n     */\n     @Override\n     public List<$!{tableInfo.name}> select$!{tableInfo.name}List($!{tableInfo.name} $!{tool.firstLowerCase($tableInfo.name)}){\n        LambdaQueryWrapper<$!{tableInfo.name}> lqw = new LambdaQueryWrapper<>();\n        return this.$!tool.firstLowerCase($!{tableInfo.name})$!tool.append(\"Mapper.\",\"selectList\")(lqw);\n     }\n     \n     /**\n     * 根据ID集合批量删除#if(${tableInfo.comment})${tableInfo.comment}\n     #end\n     */\n     @Override\n     public int delete$!{tableInfo.name}ByIds(List<$!pk.shortType> ids){\n        return this.$!tool.firstLowerCase($!{tableInfo.name})$!tool.append(\"Mapper.\",\"deleteBatchIds\")(ids);\n     }\n}"
      }, {
        "name" : "mapper.java.vm",
        "code" : "##定义初始变量\n#set($tableName = $tool.append($tableInfo.name, \"Mapper\"))\n##设置回调\n$!callback.setFileName($tool.append($tableName, \".java\"))\n$!callback.setSavePath($tool.append($tableInfo.savePath, \"/mapper\"))\n\n##拿到主键\n#if(!$tableInfo.pkColumn.isEmpty())\n    #set($pk = $tableInfo.pkColumn.get(0))\n#end\n\n#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}mapper;\n\nimport com.baomidou.mybatisplus.core.mapper.BaseMapper;\nimport $!{tableInfo.savePackageName}.entity.$!{tableInfo.name};\n\nimport org.apache.ibatis.annotations.Mapper;\nimport org.springframework.stereotype.Repository;\n\n/**\n * #if(${tableInfo.comment})${tableInfo.comment}#end mapper映射\n * @author $!author\n * @since $!time.currTime()\n */\n@Mapper\n@Repository\npublic interface $!{tableName} extends BaseMapper<$!{tableInfo.name}>{\n\t\n}"
      }, {
        "name" : "mapper.xml.vm",
        "code" : "##引入mybatis支持\n$!{mybatisSupport.vm}\n\n##设置保存名称与保存位置\n$!callback.setFileName($tool.append($!{tableInfo.name}, \"Mapper.xml\"))\n$!callback.setSavePath($tool.append($modulePath, \"/src/main/resources/mapper\"))\n\n##拿到主键\n#if(!$tableInfo.pkColumn.isEmpty())\n    #set($pk = $tableInfo.pkColumn.get(0))\n#end\n\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n<mapper namespace=\"$!{tableInfo.savePackageName}.mapper.$!{tableInfo.name}Mapper\">\n\n</mapper>"
      }, {
        "name" : "entity.java.vm",
        "code" : "##引入宏定义\n$!{define.vm}\n\n##使用宏定义设置回调（保存位置与文件后缀）\n#save(\"/entity\", \".java\")\n\n##使用宏定义设置包后缀\n#setPackageSuffix(\"entity\")\n\n##使用全局变量实现默认包导入\n$!{autoImport.vm}\nimport lombok.Data;\nimport com.baomidou.mybatisplus.annotation.*;\nimport java.io.Serializable;\n\n##表注释\n/**\n * #if(${tableInfo.comment})${tableInfo.comment}#end 实体类\n * @author $!author\n * @since $!time.currTime()\n */\n@Data\n@TableName(\"$!tool.hump2Underline($tableInfo.name)\")\npublic class $!{tableInfo.name} implements Serializable{\n    private static final long serialVersionUID = $!tool.serial();\n#foreach($column in $tableInfo.fullColumn)\n    #if($!column.obj.name == \"id\")\n    @TableId(type = IdType.AUTO,value = \"id\")\n    #elseif($!column.obj.name == \"create_time\")\n    @TableField(value = \"$!column.obj.name\",fill = FieldFill.INSERT)\n    #elseif($!column.obj.name == \"update_time\")\n    @TableField(value = \"$!column.obj.name\",fill = FieldFill.INSERT_UPDATE)\n    #elseif($!column.obj.name == \"is_delete\")\n    @TableLogic\n    @TableField(\"is_delete\")\n    #else\n    @TableField(\"$!column.obj.name\")\n    #end\n    private $!{tool.getClsNameByFullName($column.type)} $!{column.name}; //#if(${column.comment})${column.comment}#end\n    \n    \n#end\n}"
      }, {
        "name" : "authorize.sql.vm",
        "code" : "##拿到主键\n#if(!$tableInfo.pkColumn.isEmpty())\n    #set($pk = $tableInfo.pkColumn.get(0))\n#end\n##设置权限表的名称\n#set($authorize = \"authorize\")\n##设置权限表对应的权限字段名称\n#set($authorizeName = \"authorize_name\")\n\n##引入宏定义\n$!{define.vm}\n##使用宏定义设置回调（保存位置与文件后缀）\n#save(\"/sql\", \".sql\")\n\n/*\nauthorize是权限表的名字，0表示父节点id（按需修改）\n-- MySQL8.X需要开启以下配置才能创建函数\nset GLOBAL log_bin_trust_function_creators=TRUE;\n-- 如果没有函数则创建函数\nCREATE FUNCTION authorizeFunction(authorizeName VARCHAR(255)) RETURNS INT\nBEGIN \n  DECLARE result INT;\n  SELECT $!pk.obj.name INTO result FROM $!authorize WHERE $!authorizeName = authorizeName;\n  RETURN result;\nEND;\n-- MySQL8.X关闭创建函数配置\nset GLOBAL log_bin_trust_function_creators=FALSE;\n*/\n\n-- 主节点\nINSERT INTO $!tool.append(\"$!authorize VALUES (null,\") 0, '$!tool.firstLowerCase($tableInfo.name)', '$!{tableInfo.comment}管理');\n-- 子节点\nINSERT INTO $!tool.append(\"$!authorize VALUES (null,\") authorizeFunction('$!tool.firstLowerCase($tableInfo.name)'), '$!tool.firstLowerCase($tableInfo.name):insert', '$!{tableInfo.comment}新增权限');\nINSERT INTO $!tool.append(\"$!authorize VALUES (null,\") authorizeFunction('$!tool.firstLowerCase($tableInfo.name)'), '$!tool.firstLowerCase($tableInfo.name):select', '$!{tableInfo.comment}查询权限');\nINSERT INTO $!tool.append(\"$!authorize VALUES (null,\") authorizeFunction('$!tool.firstLowerCase($tableInfo.name)'), '$!tool.firstLowerCase($tableInfo.name):update', '$!{tableInfo.comment}修改权限');\nINSERT INTO $!tool.append(\"$!authorize VALUES (null,\") authorizeFunction('$!tool.firstLowerCase($tableInfo.name)'), '$!tool.firstLowerCase($tableInfo.name):delete', '$!{tableInfo.comment}删除权限');"
      } ]
    }
  },
  "columnConfig" : {
    "Default" : {
      "name" : "Default",
      "elementList" : [ {
        "title" : "disable",
        "type" : "BOOLEAN",
        "selectValue" : ""
      }, {
        "title" : "support",
        "type" : "SELECT",
        "selectValue" : "add,edit,query,del,ui"
      } ]
    }
  },
  "globalConfig" : {
    "Default" : {
      "name" : "Default",
      "elementList" : [ {
        "name" : "autoImport.vm",
        "value" : "##自动导入包（仅导入实体属性需要的包，通常用于实体类）\n#foreach($import in $importList)\nimport $!import;\n#end"
      }, {
        "name" : "define.vm",
        "value" : "##（Velocity宏定义）\n\n##定义设置表名后缀的宏定义，调用方式：#setTableSuffix(\"Test\")\n#macro(setTableSuffix $suffix)\n    #set($tableName = $!tool.append($tableInfo.name, $suffix))\n#end\n\n##定义设置包名后缀的宏定义，调用方式：#setPackageSuffix(\"Test\")\n#macro(setPackageSuffix $suffix)\n#if($suffix!=\"\")package #end#if($tableInfo.savePackageName!=\"\")$!{tableInfo.savePackageName}.#{end}$!suffix;\n#end\n\n##定义直接保存路径与文件名简化的宏定义，调用方式：#save(\"/entity\", \".java\")\n#macro(save $path $fileName)\n    $!callback.setSavePath($tool.append($tableInfo.savePath, $path))\n    $!callback.setFileName($tool.append($tableInfo.name, $fileName))\n#end\n\n##定义表注释的宏定义，调用方式：#tableComment(\"注释信息\")\n#macro(tableComment $desc)\n/**\n * $!{tableInfo.comment}($!{tableInfo.name})$desc\n *\n * @author $!author\n * @since $!time.currTime()\n */\n#end\n\n##定义GET，SET方法的宏定义，调用方式：#getSetMethod($column)\n#macro(getSetMethod $column)\n\n    public $!{tool.getClsNameByFullName($column.type)} get$!{tool.firstUpperCase($column.name)}() {\n        return $!{column.name};\n    }\n\n    public void set$!{tool.firstUpperCase($column.name)}($!{tool.getClsNameByFullName($column.type)} $!{column.name}) {\n        this.$!{column.name} = $!{column.name};\n    }\n#end"
      }, {
        "name" : "init.vm",
        "value" : "##初始化区域\n\n##去掉表的t_前缀\n$!tableInfo.setName($tool.getClassName($tableInfo.obj.name.replaceFirst(\"book_\",\"\")))\n\n##参考阿里巴巴开发手册，POJO 类中布尔类型的变量，都不要加 is 前缀，否则部分框架解析会引起序列化错误\n#foreach($column in $tableInfo.fullColumn)\n#if($column.name.startsWith(\"is\") && $column.type.equals(\"java.lang.Boolean\"))\n    $!column.setName($tool.firstLowerCase($column.name.substring(2)))\n#end\n#end\n\n##实现动态排除列\n#set($temp = $tool.newHashSet(\"testCreateTime\", \"otherColumn\"))\n#foreach($item in $temp)\n    #set($newList = $tool.newArrayList())\n    #foreach($column in $tableInfo.fullColumn)\n        #if($column.name!=$item)\n            ##带有反回值的方法调用时使用$tool.call来消除返回值\n            $tool.call($newList.add($column))\n        #end\n    #end\n    ##重新保存\n    $tableInfo.setFullColumn($newList)\n#end\n\n##对importList进行篡改\n#set($temp = $tool.newHashSet())\n#foreach($column in $tableInfo.fullColumn)\n    #if(!$column.type.startsWith(\"java.lang.\"))\n        ##带有反回值的方法调用时使用$tool.call来消除返回值\n        $tool.call($temp.add($column.type))\n    #end\n#end\n##覆盖\n#set($importList = $temp)"
      }, {
        "name" : "mybatisSupport.vm",
        "value" : "##针对Mybatis 进行支持，主要用于生成xml文件\n#foreach($column in $tableInfo.fullColumn)\n    ##储存列类型\n    $tool.call($column.ext.put(\"sqlType\", $tool.getField($column.obj.dataType, \"typeName\")))\n    #if($tool.newHashSet(\"java.lang.Boolean\", \"boolean\").contains($column.type))\n        #set($jdbcType=\"BOOLEAN\")\n    #elseif($tool.newHashSet(\"java.lang.String\").contains($column.type))\n        #set($jdbcType=\"VARCHAR\")\n    #elseif($tool.newHashSet(\"java.lang.Byte\", \"byte\").contains($column.type))\n        #set($jdbcType=\"BYTE\")\n    #elseif($tool.newHashSet(\"java.lang.Integer\", \"int\", \"java.lang.Short\", \"short\").contains($column.type))\n        #set($jdbcType=\"INTEGER\")\n    #elseif($tool.newHashSet(\"java.lang.Long\", \"long\").contains($column.type))\n        #set($jdbcType=\"BIGINT\")\n    #elseif($tool.newHashSet(\"java.lang.Float\", \"float\", \"java.lang.Double\", \"double\").contains($column.type))\n        #set($jdbcType=\"NUMERIC\")\n    #elseif($tool.newHashSet(\"java.util.Date\", \"java.sql.Timestamp\", \"java.time.Instant\", \"java.time.LocalDateTime\", \"java.time.OffsetDateTime\", \"\tjava.time.ZonedDateTime\").contains($column.type))\n        #set($jdbcType=\"TIMESTAMP\")\n    #elseif($tool.newHashSet(\"java.sql.Date\", \"java.time.LocalDate\").contains($column.type))\n        #set($jdbcType=\"TIMESTAMP\")\n    #else\n        ##其他类型\n        #set($jdbcType=\"VARCHAR\")\n    #end\n    $tool.call($column.ext.put(\"jdbcType\", $jdbcType))\n#end\n\n##定义宏，查询所有列\n#macro(allSqlColumn)#foreach($column in $tableInfo.fullColumn)$column.obj.name#if($velocityHasNext), #end#end#end\n"
      } ]
    }
  }
}